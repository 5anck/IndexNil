--TEEXHZSG2

--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.6) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=0;local v82;while true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v96=v5(v82,v19);v19=nil;return v96;else return v82;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v83=0 -0 ;local v84;while true do if (v83==((0 + 0) -0)) then v84=(v31/((3 -1)^(v32-(2 -1))))%((621 -(555 + 64))^(((v33-((1328 -396) -(857 + 74))) -(v32-(569 -(367 + 201)))) + (928 -(214 + (1778 -(68 + 997)))))) ;return v84-(v84%(1 + 0)) ;end end else local v85=(1 + 1)^(v32-(878 -((1552 -(226 + 1044)) + (2590 -1995)))) ;return (((v31%(v85 + v85))>=v85) and 1) or (1637 -(1523 + 114)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (119 -(32 + 85)) );v18=v18 + 2 + 0 ;return (v36 * (57 + 199)) + v35 ;end local function v23() local v37=(704 + 253) -(892 + 65) ;local v38;local v39;local v40;local v41;while true do if (v37==(2 -(3 -2))) then return (v41 * (16778168 -(802 + 150))) + (v40 * (121138 -55602)) + (v39 * (469 -213)) + v38 ;end if (v37==(350 -(87 + (707 -444)))) then v38,v39,v40,v41=v1(v16,v18,v18 + (183 -((120 -53) + 113)) );v18=v18 + 3 + 1 ;v37=2 -(1 + 0) ;end end end local function v24() local v42=v23();local v43=v23();local v44=998 -(915 + 82) ;local v45=(v20(v43,2 -(2 -1) ,12 + 1 + 7 ) * (2^(41 -9))) + v42 ;local v46=v20(v43,21,1218 -(1069 + 118) );local v47=((v20(v43,(26 + 46) -40 )==(1 -(885 -(261 + 624)))) and  -(1 + 0)) or (1 + 0) ;if (v46==(0 -0)) then if (v45==0) then return v47 * (0 + 0) ;else v46=792 -(368 + 423) ;v44=0 -0 ;end elseif (v46==2047) then return ((v45==(0 -0)) and (v47 * ((1 + 0)/(18 -(10 + 8))))) or (v47 * NaN) ;end return v8(v47,v46-(3934 -2911) ) * (v44 + (v45/((7 -5)^(494 -(416 + 26))))) ;end local function v25(v48) local v49;if  not v48 then local v86=(0 + 0) -0 ;while true do if (v86==(1080 -(1020 + 60))) then v48=v23();if (v48==(1423 -(630 + 793))) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(3 -2) );v18=v18 + v48 ;local v50={};for v64=4 -3 , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;while true do local v66=0 -0 ;while true do if (v66==(286 -(134 + 151))) then if (v51~=(1667 -(970 + 695))) then else for v97=1 -0 ,v23() do local v98=0;local v99;local v100;while true do if (0==v98) then v99=1990 -(582 + 1408) ;v100=nil;v98=3 -2 ;end if (v98~=1) then else while true do if (v99==(0 -0)) then v100=v21();if (v20(v100,1,1)~=0) then else local v112=0;local v113;local v114;local v115;local v116;while true do if (v112~=2) then else while true do if (0==v113) then local v262=0 -0 ;local v263;while true do if (v262==0) then v263=1824 -(1195 + 629) ;while true do if (v263==1) then v113=1 -0 ;break;end if ((241 -(187 + 54))==v263) then v114=v20(v100,2,3);v115=v20(v100,4,6);v263=1;end end break;end end end if ((782 -(162 + 618))~=v113) then else local v264=0 + 0 ;local v265;while true do if (v264==0) then v265=0 + 0 ;while true do if (v265==(0 -0)) then if (v20(v115,1,1)==1) then v116[2]=v57[v116[2 -0 ]];end if (v20(v115,2,1 + 1 )==1) then v116[3]=v57[v116[1639 -(1373 + 263) ]];end v265=1001 -(451 + 549) ;end if (v265==(1 + 0)) then v113=4 -1 ;break;end end break;end end end if (v113==3) then if (v20(v115,4 -1 ,1387 -(746 + 638) )==1) then v116[4]=v57[v116[4]];end v52[v97]=v116;break;end if (v113==(1 + 0)) then local v267=0;local v268;while true do if (v267==0) then v268=0;while true do if (0==v268) then v116={v22(),v22(),nil,nil};if (v114==(1581 -(1535 + 46))) then local v309=0 + 0 ;while true do if ((0 + 0)~=v309) then else v116[563 -(306 + 254) ]=v22();v116[4]=v22();break;end end elseif (v114==(1 + 0)) then v116[5 -2 ]=v23();elseif (v114==(1469 -(899 + 568))) then v116[3]=v23() -(2^16) ;elseif (v114~=(2 + 1)) then else local v314=0 -0 ;local v315;while true do if (v314~=0) then else v315=0;while true do if (v315~=0) then else v116[3]=v23() -(2^(619 -(268 + 335))) ;v116[4]=v22();break;end end break;end end end v268=291 -(60 + 230) ;end if (v268~=1) then else v113=2;break;end end break;end end end end break;end if (v112==(573 -(426 + 146))) then local v211=0 + 0 ;local v212;while true do if (v211~=0) then else v212=0;while true do if (v212==(1456 -(282 + 1174))) then v115=nil;v116=nil;v212=812 -(569 + 242) ;end if (v212==(2 -1)) then v112=1 + 1 ;break;end end break;end end end if (v112==(1024 -(706 + 318))) then v113=0;v114=nil;v112=1252 -(721 + 530) ;end end end break;end end break;end end end for v101=1272 -(945 + 326) ,v23() do v53[v101-(2 -1) ]=v28();end return v55;end break;end if (v66~=(0 + 0)) then else if (v51~=0) then else v52={};v53={};v54={};v55={v52,v53,nil,v54};v51=1087 -(461 + 625) ;end if (1~=v51) then else v56=v23();v57={};for v103=1,v56 do local v104=1288 -(993 + 295) ;local v105;local v106;local v107;while true do if (v104~=(0 + 0)) then else local v108=1171 -(418 + 753) ;while true do if (v108==1) then v104=1 + 0 ;break;end if (v108==(0 + 0)) then v105=0;v106=nil;v108=1 + 0 ;end end end if (v104==(1 + 0)) then v107=nil;while true do if (v105==(530 -(406 + 123))) then if (v106==(1770 -(1749 + 20))) then v107=v21()~=0 ;elseif (v106==(1 + 1)) then v107=v24();elseif (v106==3) then v107=v25();end v57[v103]=v107;break;end if (0==v105) then local v110=1322 -(1249 + 73) ;local v111;while true do if (v110~=(0 + 0)) then else v111=1145 -(466 + 679) ;while true do if (v111~=(2 -1)) then else v105=1;break;end if (v111==0) then v106=v21();v107=nil;v111=2 -1 ;end end break;end end end end break;end end end v55[1903 -(106 + 1794) ]=v21();v51=1 + 1 ;end v66=1;end end end end local function v29(v58,v59,v60) local v61=v58[1];local v62=v58[2];local v63=v58[3];return function(...) local v67=v61;local v68=v62;local v69=v63;local v70=v27;local v71=1;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v87=0,v75 do if (v87>=v69) then v73[v87-v69 ]=v74[v87 + 1 ];else v77[v87]=v74[v87 + 1 ];end end local v78=(v75-v69) + 1 ;local v79;local v80;while true do local v88=0;while true do if (v88==1) then if (v80<=31) then if (v80<=15) then if (v80<=7) then if (v80<=3) then if (v80<=1) then if (v80>0) then v77[v79[2]]=v77[v79[3]] + v77[v79[4]] ;else local v118=v79[2];local v119={};for v213=1, #v76 do local v214=0;local v215;while true do if (v214==0) then v215=v76[v213];for v286=0, #v215 do local v287=v215[v286];local v288=v287[1];local v289=v287[2];if ((v288==v77) and (v289>=v118)) then v119[v289]=v288[v289];v287[1]=v119;end end break;end end end end elseif (v80>2) then v77[v79[2]]=v77[v79[3]];else do return;end end elseif (v80<=5) then if (v80>4) then v71=v79[3];elseif (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80==6) then do return;end else v77[v79[2]][v79[3]]=v77[v79[4]];end elseif (v80<=11) then if (v80<=9) then if (v80>8) then local v125=0;local v126;while true do if (v125==0) then v126=v79[2];do return v13(v77,v126,v72);end break;end end else v77[v79[2]]=v29(v68[v79[3]],nil,v60);end elseif (v80==10) then v77[v79[2]]();else local v128=0;local v129;local v130;local v131;while true do if (v128==0) then v129=v68[v79[3]];v130=nil;v128=1;end if (v128==2) then for v270=1,v79[4] do v71=v71 + 1 ;local v271=v67[v71];if (v271[1]==3) then v131[v270-1 ]={v77,v271[3]};else v131[v270-1 ]={v59,v271[3]};end v76[ #v76 + 1 ]=v131;end v77[v79[2]]=v29(v129,v130,v60);break;end if (v128==1) then v131={};v130=v10({},{__index=function(v273,v274) local v275=v131[v274];return v275[1][v275[2]];end,__newindex=function(v276,v277,v278) local v279=v131[v277];v279[1][v279[2]]=v278;end});v128=2;end end end elseif (v80<=13) then if (v80==12) then v77[v79[2]]=v79[3];else v77[v79[2]]=v77[v79[3]] + v77[v79[4]] ;end elseif (v80>14) then v77[v79[2]]=v79[3]~=0 ;else v77[v79[2]]=v60[v79[3]];end elseif (v80<=23) then if (v80<=19) then if (v80<=17) then if (v80>16) then local v138=0;local v139;while true do if (0==v138) then v139=v79[2];do return v13(v77,v139,v72);end break;end end else local v140=v79[2];local v141=v77[v79[3]];v77[v140 + 1 ]=v141;v77[v140]=v141[v79[4]];end elseif (v80>18) then if (v77[v79[2]]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end else v71=v79[3];end elseif (v80<=21) then if (v80==20) then v77[v79[2]]();else local v146=0;local v147;while true do if (v146==0) then v147=v79[2];v77[v147]=v77[v147](v13(v77,v147 + 1 ,v79[3]));break;end end end elseif (v80>22) then v77[v79[2]]={};else local v149=v79[2];v77[v149]=v77[v149](v13(v77,v149 + 1 ,v79[3]));end elseif (v80<=27) then if (v80<=25) then if (v80>24) then v77[v79[2]][v79[3]]=v77[v79[4]];else local v153=0;local v154;while true do if (v153==0) then v154=v79[2];do return v77[v154](v13(v77,v154 + 1 ,v79[3]));end break;end end end elseif (v80>26) then v77[v79[2]]=v77[v79[3]][v79[4]];else v77[v79[2]]=v29(v68[v79[3]],nil,v60);end elseif (v80<=29) then if (v80>28) then v77[v79[2]]=v77[v79[3]];else v77[v79[2]]=v79[3];end elseif (v80>30) then v77[v79[2]]={};elseif (v77[v79[2]]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=47) then if (v80<=39) then if (v80<=35) then if (v80<=33) then if (v80==32) then local v163=v79[2];do return v77[v163](v13(v77,v163 + 1 ,v79[3]));end else for v216=v79[2],v79[3] do v77[v216]=nil;end end elseif (v80>34) then v77[v79[2]]=v77[v79[3]][v77[v79[4]]];else local v166=v79[2];v77[v166](v13(v77,v166 + 1 ,v79[3]));end elseif (v80<=37) then if (v80>36) then if v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end else local v167=0;local v168;while true do if (v167==0) then v168=v79[2];v77[v168]=v77[v168](v77[v168 + 1 ]);break;end end end elseif (v80==38) then local v169=0;local v170;local v171;while true do if (v169==1) then for v281=1, #v76 do local v282=0;local v283;while true do if (0==v282) then v283=v76[v281];for v298=0, #v283 do local v299=v283[v298];local v300=v299[1];local v301=v299[2];if ((v300==v77) and (v301>=v170)) then v171[v301]=v300[v301];v299[1]=v171;end end break;end end end break;end if (v169==0) then v170=v79[2];v171={};v169=1;end end elseif (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=43) then if (v80<=41) then if (v80==40) then v77[v79[2]]=v60[v79[3]];else v59[v79[3]]=v77[v79[2]];end elseif (v80==42) then v77[v79[2]][v79[3]]=v79[4];else v77[v79[2]]=v77[v79[3]][v79[4]];end elseif (v80<=45) then if (v80>44) then local v180=v79[2];v77[v180](v77[v180 + 1 ]);else local v181=0;local v182;local v183;while true do if (v181==1) then v77[v182 + 1 ]=v183;v77[v182]=v183[v79[4]];break;end if (v181==0) then v182=v79[2];v183=v77[v79[3]];v181=1;end end end elseif (v80==46) then local v184=v79[2];v77[v184]=v77[v184](v77[v184 + 1 ]);else v77[v79[2]]=v79[3]~=0 ;end elseif (v80<=55) then if (v80<=51) then if (v80<=49) then if (v80>48) then local v187=v79[2];local v188={v77[v187](v77[v187 + 1 ])};local v189=0;for v218=v187,v79[4] do v189=v189 + 1 ;v77[v218]=v188[v189];end else v77[v79[2]]=v59[v79[3]];end elseif (v80>50) then v77[v79[2]]=v77[v79[3]][v77[v79[4]]];else v77[v79[2]]=v77[v79[3]] -v77[v79[4]] ;end elseif (v80<=53) then if (v80>52) then if v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80>54) then v77[v79[2]]=v77[v79[3]] -v77[v79[4]] ;else for v221=v79[2],v79[3] do v77[v221]=nil;end end elseif (v80<=59) then if (v80<=57) then if (v80==56) then local v196=v79[2];v77[v196](v13(v77,v196 + 1 ,v79[3]));else v77[v79[2]][v79[3]]=v79[4];end elseif (v80>58) then v77[v79[2]]=v59[v79[3]];elseif (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=61) then if (v80>60) then local v201=v68[v79[3]];local v202;local v203={};v202=v10({},{__index=function(v223,v224) local v225=v203[v224];return v225[1][v225[2]];end,__newindex=function(v226,v227,v228) local v229=0;local v230;while true do if (v229==0) then v230=v203[v227];v230[1][v230[2]]=v228;break;end end end});for v231=1,v79[4] do v71=v71 + 1 ;local v232=v67[v71];if (v232[1]==3) then v203[v231-1 ]={v77,v232[3]};else v203[v231-1 ]={v59,v232[3]};end v76[ #v76 + 1 ]=v203;end v77[v79[2]]=v29(v201,v202,v60);else v59[v79[3]]=v77[v79[2]];end elseif (v80==62) then local v207=v79[2];local v208={v77[v207](v77[v207 + 1 ])};local v209=0;for v234=v207,v79[4] do v209=v209 + 1 ;v77[v234]=v208[v209];end else local v210=v79[2];v77[v210](v77[v210 + 1 ]);end v71=v71 + 1 ;break;end if (v88==0) then v79=v67[v71];v80=v79[1];v88=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
