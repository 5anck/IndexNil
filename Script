--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=v2(v0(v30,16));if v19 then local v86=v5(v80,v19);v19=nil;return v86;else return v80;end end end);local function v20(v31,v32,v33) if v33 then local v81=(v31/((5 -3)^(v32-(1 + 0))))%((5 -3)^(((v33-(878 -(282 + 595))) -(v32-((1 -0) -(957 -(892 + 65))))) + ((3 -1) -1))) ;return v81-(v81%(1 -0)) ;else local v82=(1415 -(87 + 263)) -(68 + 997) ;local v83;while true do if (v82==(1270 -(226 + 1044))) then v83=(8 -6)^(v32-(620 -(555 + 64))) ;return (((v31%(v83 + v83))>=v83) and ((2222 -1290) -(857 + 74))) or (568 -(367 + 201)) ;end end end end local function v21() local v34=0;local v35;while true do if (v34==((719 -538) -(67 + 113))) then return v35;end if (v34==(0 + 0)) then v35=v1(v16,v18,v18);v18=v18 + (2 -1) ;v34=1 + 0 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (954 -(802 + 150)) );v18=v18 + 2 ;return (v37 * (689 -433)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (6 -2) ;return (v41 * (12211951 + 4565265)) + (v40 * (66533 -(915 + 82))) + (v39 * 256) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=1;local v45=(v20(v43,1,20) * ((5 -(1 + 2))^(19 + 11 + 2))) + v42 ;local v46=v20(v43,27 -6 ,1218 -(1069 + 118) );local v47=((v20(v43,72 -40 )==1) and  -(1 -0)) or 1 ;if (v46==(0 + 0)) then if (v45==(0 -0)) then return v47 * (0 + 0) ;else local v87=791 -(368 + (1195 -(201 + 571))) ;while true do if (v87==(0 -(1138 -(116 + 1022)))) then v46=19 -(10 + 8) ;v44=(0 -0) -0 ;break;end end end elseif (v46==(2489 -(416 + 26))) then return ((v45==(0 -0)) and (v47 * ((1 + 0)/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(1461 -(145 + 293)) ) * (v44 + (v45/((432 -(44 + 227 + 159))^(1538 -(998 + 488))))) ;end local function v25(v48) local v49=0 -0 ;local v50;local v51;while true do if (v49==1) then v50=v3(v16,v18,(v18 + v48) -(3 -2) );v18=v18 + v48 ;v49=1082 -(1020 + 60) ;end if (v49==(862 -(814 + 45))) then return v6(v51);end if (v49==(0 -0)) then v50=nil;if  not v48 then v48=v23();if (v48==(0 -(766 -(745 + 21)))) then return "";end end v49=1 + 0 ;end if (v49==((3 + 3) -4)) then v51={};for v88=1748 -(760 + (2715 -1728)) , #v50 do v51[v88]=v2(v1(v3(v50,v88,v88)));end v49=2 + 1 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=574 -(507 + 67) ;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v65=1749 -(1013 + 736) ;while true do if (0==v65) then if (0==v52) then local v96=0 + 0 ;while true do if (v96==(1 + 0)) then v55={};v56={v53,v54,nil,v55};v96=869 -(550 + 317) ;end if (0~=v96) then else v53={};v54={};v96=1 -0 ;end if (v96==(1 + 1)) then v52=1 -0 ;break;end end end if (v52~=(1 + 0)) then else local v97=0 + 0 ;local v98;while true do if (v97==0) then v98=0 -0 ;while true do if (0~=v98) then else v57=v23();v58={};v98=286 -(134 + 151) ;end if (v98==2) then v52=1667 -(970 + 695) ;break;end if ((1 -0)==v98) then for v112=1991 -(582 + 1408) ,v57 do local v113=0;local v114;local v115;local v116;while true do if (v113~=1) then else v116=nil;while true do if ((0 -0)~=v114) then else local v243=0;while true do if (v243~=(0 -0)) then else v115=v21();v116=nil;v243=3 -2 ;end if (v243==(1323 -(1249 + 73))) then v114=1 + 0 ;break;end end end if (v114==(1146 -(466 + 679))) then if (v115==(1825 -(1195 + 629))) then v116=v21()~=(0 -0) ;elseif (v115==2) then v116=v24();elseif (v115==3) then v116=v25();end v58[v112]=v116;break;end end break;end if (v113~=(0 -0)) then else local v123=1900 -(106 + 1794) ;while true do if ((1 -0)==v123) then v113=242 -(187 + 54) ;break;end if (v123==0) then v114=780 -(162 + 618) ;v115=nil;v123=1 + 0 ;end end end end end v56[3 + 0 ]=v21();v98=5 -3 ;end end break;end end end v65=1;end if (v65==(1 + 0)) then if (2~=v52) then else for v99=1,v23() do local v100=v21();if (v20(v100,2 -1 ,1 -0 )~=(0 -0)) then else local v103=114 -(4 + 110) ;local v104;local v105;local v106;local v107;while true do if (v103==1) then local v109=0 + 0 ;local v110;while true do if (v109==(1636 -(1373 + 263))) then v110=1427 -(41 + 1386) ;while true do if (v110~=(1001 -(451 + 549))) then else v103=1 + 1 ;break;end if (v110==(0 -0)) then v106=nil;v107=nil;v110=1 -0 ;end end break;end end end if (v103~=2) then else while true do if (v104==(1387 -(746 + 638))) then if (v20(v106,2 + 1 ,169 -(122 + 44) )==1) then v107[6 -2 ]=v58[v107[4]];end v53[v99]=v107;break;end if ((1 -0)~=v104) then else local v118=0;while true do if (v118==1) then v104=343 -(218 + 123) ;break;end if (v118==(1581 -(1535 + 46))) then v107={v22(),v22(),nil,nil};if (v105==(0 -0)) then local v257=560 -(306 + 254) ;while true do if (v257==(0 + 0)) then v107[5 -2 ]=v22();v107[1471 -(899 + 568) ]=v22();break;end end elseif (v105==(3 -2)) then v107[1215 -(323 + 889) ]=v23();elseif (v105==(5 -3)) then v107[3]=v23() -((582 -(361 + 219))^(336 -(53 + 267))) ;elseif (v105==(2 + 1)) then local v310=0;local v311;while true do if (v310==(0 -0)) then v311=0;while true do if ((413 -(15 + 398))==v311) then v107[606 -(268 + 335) ]=v23() -(2^16) ;v107[294 -(60 + 230) ]=v22();break;end end break;end end end v118=983 -(18 + 964) ;end end end if (v104~=0) then else local v119=0;local v120;while true do if (v119==(572 -(426 + 146))) then v120=0 + 0 ;while true do if (v120~=(1 + 0)) then else v104=1;break;end if (v120==(0 + 0)) then v105=v20(v100,2,3);v106=v20(v100,1460 -(282 + 1174) ,817 -(569 + 242) );v120=1 + 0 ;end end break;end end end if (v104==(128 -(116 + 10))) then local v121=0;local v122;while true do if (v121~=(0 -0)) then else v122=0;while true do if (v122~=0) then else if (v20(v106,1 + 0 ,739 -(542 + 196) )~=(1025 -(706 + 318))) then else v107[2]=v58[v107[2]];end if (v20(v106,1253 -(721 + 530) ,1273 -(945 + 326) )~=1) then else v107[1 + 2 ]=v58[v107[7 -4 ]];end v122=1;end if (v122~=(1 + 0)) then else v104=2 + 1 ;break;end end break;end end end end break;end if (v103==(700 -(271 + 429))) then local v111=0 + 0 ;while true do if (v111==1) then v103=1552 -(1126 + 425) ;break;end if (v111~=0) then else v104=1500 -(1408 + 92) ;v105=nil;v111=1;end end end end end end for v101=406 -(118 + 287) ,v23() do v54[v101-1 ]=v28();end return v56;end break;end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...) local v66=v62;local v67=v63;local v68=v64;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v84=0,v74 do if (v84>=v68) then v72[v84-v68 ]=v73[v84 + 1 ];else v76[v84]=v73[v84 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do local v85=0;while true do if (v85==1) then if (v79<=31) then if (v79<=15) then if (v79<=7) then if (v79<=3) then if (v79<=1) then if (v79>0) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v126=0;local v127;while true do if (v126==0) then v127=v78[2];v76[v127]=v76[v127](v76[v127 + 1 ]);break;end end end elseif (v79==2) then local v128=v67[v78[3]];local v129;local v130={};v129=v10({},{__index=function(v222,v223) local v224=0;local v225;while true do if (v224==0) then v225=v130[v223];return v225[1][v225[2]];end end end,__newindex=function(v226,v227,v228) local v229=v130[v227];v229[1][v229[2]]=v228;end});for v231=1,v78[4] do v70=v70 + 1 ;local v232=v66[v70];if (v232[1]==15) then v130[v231-1 ]={v76,v232[3]};else v130[v231-1 ]={v60,v232[3]};end v75[ #v75 + 1 ]=v130;end v76[v78[2]]=v29(v128,v129,v61);else v76[v78[2]]=v78[3]~=0 ;end elseif (v79<=5) then if (v79>4) then v76[v78[2]]=v76[v78[3]][v76[v78[4]]];else local v135=v78[2];v76[v135](v76[v135 + 1 ]);end elseif (v79>6) then v76[v78[2]]=v61[v78[3]];else local v138=0;local v139;local v140;local v141;while true do if (v138==1) then v141={};v140=v10({},{__index=function(v273,v274) local v275=v141[v274];return v275[1][v275[2]];end,__newindex=function(v276,v277,v278) local v279=v141[v277];v279[1][v279[2]]=v278;end});v138=2;end if (v138==2) then for v281=1,v78[4] do local v282=0;local v283;while true do if (v282==0) then v70=v70 + 1 ;v283=v66[v70];v282=1;end if (v282==1) then if (v283[1]==15) then v141[v281-1 ]={v76,v283[3]};else v141[v281-1 ]={v60,v283[3]};end v75[ #v75 + 1 ]=v141;break;end end end v76[v78[2]]=v29(v139,v140,v61);break;end if (v138==0) then v139=v67[v78[3]];v140=nil;v138=1;end end end elseif (v79<=11) then if (v79<=9) then if (v79>8) then v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79==10) then v76[v78[2]][v78[3]]=v78[4];else local v147=0;local v148;local v149;local v150;while true do if (v147==0) then v148=v78[2];v149={v76[v148](v76[v148 + 1 ])};v147=1;end if (1==v147) then v150=0;for v284=v148,v78[4] do v150=v150 + 1 ;v76[v284]=v149[v150];end break;end end end elseif (v79<=13) then if (v79>12) then local v151=0;local v152;local v153;while true do if (v151==0) then v152=v78[2];v153={};v151=1;end if (v151==1) then for v287=1, #v75 do local v288=v75[v287];for v293=0, #v288 do local v294=0;local v295;local v296;local v297;while true do if (v294==1) then v297=v295[2];if ((v296==v76) and (v297>=v152)) then v153[v297]=v296[v297];v295[1]=v153;end break;end if (v294==0) then v295=v288[v293];v296=v295[1];v294=1;end end end end break;end end elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>14) then v76[v78[2]]=v76[v78[3]];else for v234=v78[2],v78[3] do v76[v234]=nil;end end elseif (v79<=23) then if (v79<=19) then if (v79<=17) then if (v79==16) then if (v76[v78[2]]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else for v236=v78[2],v78[3] do v76[v236]=nil;end end elseif (v79>18) then do return;end else v76[v78[2]]={};end elseif (v79<=21) then if (v79==20) then v70=v78[3];else local v158=v78[2];v76[v158](v13(v76,v158 + 1 ,v78[3]));end elseif (v79>22) then local v159=v78[2];do return v13(v76,v159,v71);end else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79<=27) then if (v79<=25) then if (v79>24) then if (v76[v78[2]]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v162=v78[2];local v163={};for v238=1, #v75 do local v239=v75[v238];for v249=0, #v239 do local v250=v239[v249];local v251=v250[1];local v252=v250[2];if ((v251==v76) and (v252>=v162)) then v163[v252]=v251[v252];v250[1]=v163;end end end end elseif (v79==26) then local v164=v78[2];do return v76[v164](v13(v76,v164 + 1 ,v78[3]));end else v76[v78[2]][v78[3]]=v78[4];end elseif (v79<=29) then if (v79==28) then v76[v78[2]]=v60[v78[3]];else local v169=v78[2];v76[v169](v13(v76,v169 + 1 ,v78[3]));end elseif (v79>30) then v70=v78[3];else do return;end end elseif (v79<=47) then if (v79<=39) then if (v79<=35) then if (v79<=33) then if (v79>32) then local v171=v78[2];v76[v171]=v76[v171](v13(v76,v171 + 1 ,v78[3]));else v76[v78[2]]();end elseif (v79==34) then local v173=v78[2];v76[v173](v76[v173 + 1 ]);else v60[v78[3]]=v76[v78[2]];end elseif (v79<=37) then if (v79==36) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==38) then local v176=v78[2];local v177={v76[v176](v76[v176 + 1 ])};local v178=0;for v240=v176,v78[4] do v178=v178 + 1 ;v76[v240]=v177[v178];end else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79<=43) then if (v79<=41) then if (v79==40) then v76[v78[2]]=v60[v78[3]];else v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;end elseif (v79==42) then v76[v78[2]]();else v76[v78[2]]=v78[3];end elseif (v79<=45) then if (v79==44) then v60[v78[3]]=v76[v78[2]];else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79>46) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v190=0;local v191;while true do if (0==v190) then v191=v78[2];do return v13(v76,v191,v71);end break;end end end elseif (v79<=55) then if (v79<=51) then if (v79<=49) then if (v79>48) then v76[v78[2]]={};else v76[v78[2]]=v76[v78[3]][v76[v78[4]]];end elseif (v79>50) then v76[v78[2]]=v78[3]~=0 ;else local v196=0;local v197;while true do if (v196==0) then v197=v78[2];do return v76[v197](v13(v76,v197 + 1 ,v78[3]));end break;end end end elseif (v79<=53) then if (v79==52) then local v198=v78[2];local v199=v76[v78[3]];v76[v198 + 1 ]=v199;v76[v198]=v199[v78[4]];else v76[v78[2]]=v76[v78[3]];end elseif (v79>54) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v29(v67[v78[3]],nil,v61);end elseif (v79<=59) then if (v79<=57) then if (v79>56) then local v206=v78[2];local v207=v76[v78[3]];v76[v206 + 1 ]=v207;v76[v206]=v207[v78[4]];else local v211=0;local v212;while true do if (0==v211) then v212=v78[2];v76[v212]=v76[v212](v76[v212 + 1 ]);break;end end end elseif (v79>58) then v76[v78[2]]=v29(v67[v78[3]],nil,v61);else v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;end elseif (v79<=61) then if (v79>60) then v76[v78[2]]=v61[v78[3]];else local v217=0;local v218;while true do if (v217==0) then v218=v78[2];v76[v218]=v76[v218](v13(v76,v218 + 1 ,v78[3]));break;end end end elseif (v79>62) then v76[v78[2]]=v78[3];else v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;end v70=v70 + 1 ;break;end if (0==v85) then v78=v66[v70];v79=v78[1];v85=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
